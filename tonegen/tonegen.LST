C51 COMPILER V9.50a   TONEGEN                                                              12/09/2014 16:51:56 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE TONEGEN
OBJECT MODULE PLACED IN tonegen.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe tonegen.c DB OE BR INCDIR(C:\SiLabs\MCU\Inc)

line level    source

   1          #include <c8051f310.h>   
   2          #include <stdio.h>
   3          #define SYSCLK       24500000 / 8         // SYSCLK frequency in Hz
   4          
   5          typedef unsigned char event;
   6          event top_second;
   7          
   8          sfr16 TMR2RL   = 0xca;                    // Timer2 reload value
   9          sfr16 TMR2     = 0xcc;                    // Timer2 counter
  10          
  11          sfr16 ADC0 = 0xbd;
  12          sfr16 PCA0CP0 = 0xFB;
  13          
  14          sbit LED = P3^3;                          // LED='1' means ON
  15          sbit SW2 = P0^7;                          // SW2='0' means switch pressed
  16          
  17          static int second = 0;
  18          
  19          int song[16] = { 
  20              0x39, 0x39, 0x39, 0x29, 0x3C, 0x3C, 0x29, 0x29, 
  21              0x39, 0x3C, 0x29, 0x29, 0x39, 0x39, 0x39, 0x39
  22          };
  23          int index = 0;
  24          
  25          
  26          unsigned int AnBiPot = 0;
  27          unsigned int AnVoPot = 0;
  28          float AnPhiPot = 0;
  29          
  30          //-----------------------------------------------------------------------------
  31          // Function PROTOTYPES
  32          //-----------------------------------------------------------------------------
  33          void UART0_init(void);
  34          void SYSCLK_Init(void);
  35          void PORT_Init(void);
  36          void Timer2_Init(int counts);
  37          void ADC_Init();
  38          void SMBUS_init();
  39          void SERVO_init();
  40          
  41          void SMBUS_begin();
  42          void Put_char_(unsigned char c);
  43          void event_init(event *e);
  44          int event_check(event *e);
  45          void SMBUS_write(unsigned char c);
  46          void SERVO_write(int angle);
  47          
  48          //-----------------------------------------------------------------------------
  49          // Function declarations
  50          //-----------------------------------------------------------------------------
  51          void main()
  52          {
  53   1          PCA0MD &= ~0x40;                        // disable watchdog timer
  54   1          SYSCLK_Init();
  55   1          PORT_Init();
C51 COMPILER V9.50a   TONEGEN                                                              12/09/2014 16:51:56 PAGE 2   

  56   1          Timer2_Init (SYSCLK / 12 / 500); 
  57   1          UART0_init();
  58   1          ADC_Init();
  59   1          SMBUS_init();
  60   1          SERVO_init();
  61   1      
  62   1          EA = 1;                                 // enable global interrupts
  63   1          
  64   1          SMBUS_begin();
  65   1          while(1)
  66   1          {
  67   2              if (event_check(&top_second))
  68   2              {
  69   3                  if (RI0) {
  70   4                      RI0 = 0;
  71   4                      switch (SBUF0) {
  72   5                          case 'x':
  73   5                              PCA0CPH0--;
  74   5                              printf("New speed %d\n", (unsigned)(unsigned char)PCA0CPH0 - 244);
  75   5                              break;
  76   5                          case 'c':
  77   5                              PCA0CPH0++;
  78   5                              printf("New speed %d\n", (unsigned)(unsigned char)PCA0CPH0 - 244);
  79   5                              break;
  80   5                          default:
  81   5                              break;
  82   5                      }
  83   4                  }
  84   3      
  85   3                  if (PCA0CPH0 > 254) {
  86   4                      PCA0CPH0 = 254;
  87   4                  }
  88   3                  if (PCA0CPH0 < 232) {
  89   4                      PCA0CPH0 = 232;
  90   4                  }
  91   3      
  92   3                  
  93   3              }
  94   2          }
  95   1      }
  96          
  97          void event_init(event *e)
  98          {
  99   1          *e = 0;
 100   1      }
 101          
 102          void event_trigger(event *e)
 103          {
 104   1          *e = 1;
 105   1      }
 106          
 107          int event_check(event *e)
 108          {
 109   1          if (*e == 1) {
 110   2              *e = 0;
 111   2              return 1;
 112   2          }
 113   1          else {
 114   2              return 0;
 115   2          }
 116   1      }
 117          
C51 COMPILER V9.50a   TONEGEN                                                              12/09/2014 16:51:56 PAGE 3   

 118          void UART0_init()
 119          {
 120   1          TH1 = -213;
 121   1          TMOD |= 0x20;
 122   1          CKCON |= 0x08;
 123   1          TR1 = 1;
 124   1          REN0 = 1;
 125   1          SBUF0 = '\n';
 126   1      }
 127          
 128          void PORT_Init()
 129          {
 130   1          XBR0 = 0x05;
 131   1          XBR1 = 0x41;
 132   1          P0SKIP = 0xCC;
 133   1          P0MDOUT |= 0x10;                        // Tx en push / pull
 134   1          P3MDOUT |= 0x08;
 135   1          P1MDOUT |= 0x01;
 136   1      }
 137          
 138          void SYSCLK_Init()
 139          {
 140   1          OSCICN = 0xC3;                          // change clock frequency
 141   1          RSTSRC = 0x04;                          // enable missing clock detector
 142   1      }
 143          
 144          void SMBUS_init()
 145          {
 146   1          SMB0CF = 0xC1;
 147   1      }
 148          
 149          void Put_char_(unsigned char c)
 150          {
 151   1          while(TI0 == 0);
 152   1          TI0 = 0;
 153   1          SBUF0 = c;
 154   1      }
 155          
 156          void Timer2_Init (int counts)
 157          {
 158   1         TMR2CN  = 0x00;                          // Stop Timer2; Clear TF2;
 159   1                                                  // use SYSCLK/12 as timebase
 160   1         CKCON  &= ~0x60;                         // Timer2 clocked based on T2XCLK;
 161   1      
 162   1         TMR2RL  = -counts;                       // Init reload values
 163   1         TMR2    = 0xffff;                        // set to reload immediately
 164   1         ET2     = 1;                             // enable Timer2 interrupts
 165   1         TR2     = 1;                             // start Timer2
 166   1      }
 167          
 168          void ADC_init()
 169          {
 170   1          AMX0N = 0x1F; // GND
 171   1          AMX0P = 0x00; // P1.0
 172   1          ADC0CN |= 0x82;
 173   1          ADC0CF = 0x60;
 174   1          REF0CN |= 0x0e;
 175   1          REF0CN = 0x08;
 176   1      }
 177          
 178          void SERVO_init()
 179          {
C51 COMPILER V9.50a   TONEGEN                                                              12/09/2014 16:51:56 PAGE 4   

 180   1          CR = 1;
 181   1          PCA0CPM0 = 0xC2;
 182   1          PCA0CP0 = -3062; // 1.5ms
 183   1          PCA0CPH0 = 248;
 184   1      }
 185          
 186          void SMBUS_begin()
 187          {
 188   1          SMBUS_write(0x00);
 189   1      }
 190          
 191          void SMBUS_write(unsigned char c)
 192          {
 193   1          // start sequence
 194   1          STA = 1;
 195   1          SI = 0;
 196   1          while (SI == 0);
 197   1      
 198   1          // send address 
 199   1          STA = 0;
 200   1          SMB0DAT = 0x48;
 201   1          SI = 0;
 202   1          while (SI == 0);
 203   1      
 204   1          // send char
 205   1          SMB0DAT = c;
 206   1          SI = 0;
 207   1          while (SI == 0);
 208   1      }
 209          
 210          
 211          ///////////////////////////
 212          // INTERRUPTS
 213          ///////////////////////////
 214          
 215          void ADC_ISR() interrupt 10
 216          {
 217   1          AD0INT = 0;
 218   1          AnBiPot = ADC0;
 219   1      }
 220          
 221          void Timer2_ISR (void) interrupt 5
 222          {
 223   1          static unsigned char x = 5;
 224   1          x--;
 225   1          if (x == 5)
 226   1          {
 227   2              x = 5;
 228   2              second++;
 229   2              event_trigger(&top_second);
 230   2          }
 231   1      
 232   1          if (TF2H == 1) 
 233   1          {
 234   2              TF2H = 0;                               // clear Timer2 interrupt flag
 235   2              LED = ~LED;                             // change state of LED
 236   2          }
 237   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    358    ----
C51 COMPILER V9.50a   TONEGEN                                                              12/09/2014 16:51:56 PAGE 5   

   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     46    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
